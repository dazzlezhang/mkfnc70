# mkfnc70.awk -- make Type 1 subfonts for CJK package (UTF-8)
#
# (C) Copyright 2011 Yu Zhang <yu_zhang@ieee.org>
#
# This awk program generates a bash script which can make type1
# subfonts and auxiliary files for CJK package from truetype fonts.
#
# Usage: awk -f mkfnc70.awk FILE
# 
# Each line of the input file should contains the follow fields:
# 
# <foundry>       <family>        <path/to/ttf>
#
# For example, if we want to make `hei' from `simhei.ttf', we need to
# put the following line to the input file:
#
# microsoft       hei             path/to/simhei.ttf
#
 
BEGIN {
    prefix = "texmf/fonts"

    ext[0] = "afm"
    ext[1] = "tfm"
    ext[2] = "pfb"
    ext[3] = "enc"
    ext[4] = "map"

    cmd = "date \"+%m/%d/%Y %H:%M:%S\""
    cmd | getline timestamp
    close(cmd)

    printf("# !/bin/bash\n")
    printf("#\n")
    printf("# This script is generate by mkcjkfont-utf8.awk.\n")
    printf("#\n")
    printf("# Report bugs to <yu_zhang@ieee.org>.\n")
    printf("#\n\n")
}

/^#/ { next }

NF == 3 {
    printf("#\n")
    printf("# %s:%s:%s\n", $1, $2, $3)
    printf("#\n")
    printf("echo \"%s -> %s/%s\"\n", $3, $1, $2)

    # Generate subfonts (afm/enc/tfm/pfb)
    printf(								\
	"fontforge -script subfonts.pe %s %s Unicode.sfd &> %s-sf.log\n\n", \
	$3, $2, $2)
    
    # Generate subfonts (map)
    printf("for i in *.tfm\n")
    printf("do\n")
    printf("cat >> %s.map << EOF\n", $2)
    printf("${i%%.tfm} ${i%%.tfm} < ${i%%.tfm}.pfb\n")
    printf("EOF\n")
    printf("done\n\n")
    
    # Generate subfonts (fd)
    printf("cat >> c70%s.fd << EOF\n", $2)
    printf("%% This is the file c70%s.fd for CJK package.\n", $2)
    printf("%% \n")
    printf("%% Generated by mkcjkfont-utf8 on %s.\n", timestamp)
    printf("\\ProvidesFile{c70%s.fd}\n", $2)
    printf("\\DeclareFontFamily{C70}{%s}{\\hyphenchar \\font\\m@ne}\n", \
	   $2)
    printf("\\DeclareFontShape{C70}{%s}{m}{n}{<-> CJK * %s}{}\n",	\
	   $2, $2)
    printf("\\endinput\n")
    printf("EOF\n\n")

    # Generate subfonts (vr)
    printf("fontforge -script vertref.pe %s %svr &> %s-vr.log\n\n",	\
	   $3, $2, $2)

    # Generate subfonts (fdx)
    printf("perl makefdx.pl %svr.afm Unicode.sfd c70 %s &> %s-mkfdx.log\n\n", \
	   $2, $2, $2)
    
    # Put files to TDS 
    for (i = 0; i < 4; ++i) {
	path = sprintf("%s/%s/%s/%s", prefix, ext[i], $1, $2)
	printf("mkdir -p %s\n", path)
	printf("mv %s*.%s %s\n", $2, ext[i], path)
    }
	
    for (i = 4; i < 5; ++i) {
	path = sprintf("%s/%s/dvips/%s", prefix, ext[i], $2)
	printf("mkdir -p %s\n", path)
	printf("mv %s*.%s %s\n", $2, ext[i], path)
    }

    path = sprintf("texmf/tex/latex/CJK/UTF8")
    printf("mkdir -p %s\n", path)
    printf("mv c70%s.fd %s\n", $2, path) 
    printf("mv c70%s.fdx %s\n", $2, path)
    printf("\n")
}

END {
    printf("mv texmf/fonts/pfb texmf/fonts/type1\n\n")
    printf("# This is the end of the script.\n")
}
